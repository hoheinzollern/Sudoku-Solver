/*
 * To change this template, choose Tool

            @Override
            public boolean accept(File file) {
                throw new UnsupportedOperationException("Not supported yet.");
            }

            @Override
            public String getDescription() {
                throw new UnsupportedOperationException("Not supported yet.");
            }
        } | Templates
 * and open the template in the editor.
 */

/*
 * MainPanel.java
 *
 * Created on 13-ago-2010, 14.24.58
 */

package sudokusolver;

import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

import sudokusolver.solvers.GenericSolver;

/**
 *
 * @author alessandro
 */
public class MainPanel extends javax.swing.JPanel implements Logger {

    /** Creates new form MainPanel */
    public MainPanel() {
        Core.setSudoku(new Sudoku(Core.getConstraintMatrix()));
        Core.setLogger(this);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        levelGroup = new javax.swing.ButtonGroup();
        mediumLevelRadio = new javax.swing.JRadioButton();
        hardLevelRadio = new javax.swing.JRadioButton();
        easyLevelRadio = new javax.swing.JRadioButton();
        stopButton = new javax.swing.JButton();
        loadGameButton = new javax.swing.JButton();
        saveGameButton = new javax.swing.JButton();
        sudokuPanel = new javax.swing.JPanel();
        view = new View(Core.getSudoku());
        jScrollPane1 = new javax.swing.JScrollPane();
        eventsLogList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        newGameButton = new javax.swing.JButton();
        resetGameButton = new javax.swing.JButton();
        constraintPropagationCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        searchAlgotihmCombo = new javax.swing.JComboBox();
        startButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        visitedNodesField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        timeElapsedField = new javax.swing.JTextField();

        levelGroup.add(mediumLevelRadio);
        mediumLevelRadio.setSelected(true);
        mediumLevelRadio.setText("Medium");

        levelGroup.add(hardLevelRadio);
        hardLevelRadio.setText("Hard");

        levelGroup.add(easyLevelRadio);
        easyLevelRadio.setText("Easy");

        stopButton.setText("Stop solving");
        stopButton.setEnabled(false);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        loadGameButton.setText("Load Game");
        loadGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadGameButtonActionPerformed(evt);
            }
        });

        saveGameButton.setText("Save Game");
        saveGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveGameButtonActionPerformed(evt);
            }
        });

        sudokuPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout sudokuPanelLayout = new javax.swing.GroupLayout(sudokuPanel);
        sudokuPanel.setLayout(sudokuPanelLayout);
        sudokuPanelLayout.setHorizontalGroup(
            sudokuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(view, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );
        sudokuPanelLayout.setVerticalGroup(
            sudokuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(view, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
        );

        eventsLogList.setModel(new javax.swing.DefaultListModel());
        jScrollPane1.setViewportView(eventsLogList);

        jLabel1.setText("Events log:");

        jLabel2.setText("Search algorithm:");

        newGameButton.setText("New Game");
        newGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameButtonActionPerformed(evt);
            }
        });

        resetGameButton.setText("Reset Game");
        resetGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetGameButtonActionPerformed(evt);
            }
        });

        constraintPropagationCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Forward checking", "Partial look-ahead", "Arc consistency" }));
        constraintPropagationCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                constraintPropagationComboActionPerformed(evt);
            }
        });

        jLabel4.setText("Constraint propagation:");

        searchAlgotihmCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Propagation Only", "Backtracking Search", "Dancing Links" }));
        searchAlgotihmCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAlgotihmComboActionPerformed(evt);
            }
        });

        startButton.setText("Start solving");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Nodi visitati:");

        visitedNodesField.setEditable(false);

        jLabel5.setText("Tempo impiegato (ms):");

        timeElapsedField.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(newGameButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(resetGameButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                        .addGap(56, 56, 56))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(31, 31, 31))
                    .addComponent(searchAlgotihmCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(constraintPropagationCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(startButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(visitedNodesField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addComponent(timeElapsedField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(newGameButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetGameButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visitedNodesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeElapsedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchAlgotihmCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(constraintPropagationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(startButton)
                .addContainerGap(338, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
                    .addComponent(sudokuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(sudokuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameButtonActionPerformed
        int level;
        if (easyLevelRadio.isSelected())
            level = 1;
        else if (mediumLevelRadio.isSelected())
            level = 2;
        else
            level = 3;
        Core.makeSudoku(level);
        DefaultListModel listModel = (DefaultListModel) eventsLogList.getModel();
        listModel.clear();
        timeElapsedField.setText("");
        visitedNodesField.setText("");
        ((View)view).setSudoku(Core.getSudoku());
    }//GEN-LAST:event_newGameButtonActionPerformed

    private void resetGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetGameButtonActionPerformed
        Core.getSudoku().reset();
        DefaultListModel listModel = (DefaultListModel) eventsLogList.getModel();
        listModel.clear();
        timeElapsedField.setText("");
        visitedNodesField.setText("");
    }//GEN-LAST:event_resetGameButtonActionPerformed

    private void loadGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadGameButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadGameButtonActionPerformed

    private void saveGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveGameButtonActionPerformed
    	//Core.saveSudoku("H:\\Desktop\\salvato.sudoku", sudoku);
    }//GEN-LAST:event_saveGameButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
    	try {
    		Core.startSolver(searchAlgotihmCombo.getSelectedIndex(),
                    constraintPropagationCombo.getSelectedIndex());
                timeElapsedField.setText(new Long(Core.elapsedTime()).toString());
                visitedNodesField.setText(new Long(Core.visitedNodes()).toString());
    	} catch (Exception e) {
    		JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    	}
    }//GEN-LAST:event_startButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stopButtonActionPerformed

    private void searchAlgotihmComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAlgotihmComboActionPerformed
        int index = searchAlgotihmCombo.getSelectedIndex();
        if (index == 2) {
            constraintPropagationCombo.setEnabled(false);
        } else {
            constraintPropagationCombo.setEnabled(true);
            DefaultComboBoxModel listModel = (DefaultComboBoxModel)constraintPropagationCombo.getModel();
            listModel.removeAllElements();
            if (index == 1) {
                String[] list = {"No propagation", "Forward checking", "Partial look-ahead", "Arc consistency"};
                for (int i = 0; i < list.length; i++)
                    listModel.addElement(list[i]);
            } else {
                String[] list = {"Forward checking", "Partial look-ahead", "Arc consistency"};
                for (int i = 0; i < list.length; i++)
                    listModel.addElement(list[i]);

            }
        }
    }//GEN-LAST:event_searchAlgotihmComboActionPerformed

    private void constraintPropagationComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_constraintPropagationComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_constraintPropagationComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox constraintPropagationCombo;
    private javax.swing.JRadioButton easyLevelRadio;
    private javax.swing.JList eventsLogList;
    private javax.swing.JRadioButton hardLevelRadio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.ButtonGroup levelGroup;
    private javax.swing.JButton loadGameButton;
    private javax.swing.JRadioButton mediumLevelRadio;
    private javax.swing.JButton newGameButton;
    private javax.swing.JButton resetGameButton;
    private javax.swing.JButton saveGameButton;
    private javax.swing.JComboBox searchAlgotihmCombo;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JPanel sudokuPanel;
    private javax.swing.JTextField timeElapsedField;
    private java.awt.Canvas view;
    private javax.swing.JTextField visitedNodesField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void log(String message) {
        DefaultListModel listModel = (DefaultListModel) eventsLogList.getModel();
        listModel.addElement(message);
    }

}